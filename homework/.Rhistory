geom_line()+
geom_point()
gapminder %>%
group_by(year) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey, group=continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(year) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey, group=continent))+
geom_line()+
geom_point()
#install.packages("gapminder")
library("gapminder")
gapminder %>%
group_by(continent) %>%
summarise(max_life_expectancy = max(lifeExp),
min_life_expectency = min(lifeExp),
mean_life_expectency = mean(lifeExp))
gapminder %>%
group_by(year) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey, group=continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(year) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey))+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey))+
geom_line()+
geom_point()
gapminder %>%
group_by(year, continent) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey))+
geom_line()+
geom_point()
gapminder %>%
group_by(year, continent) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey,group=continent))+
geom_line()+
geom_point()
gapminder %>%
group_by(year, continent) %>%
summarise(mean_life_expectancey = mean(lifeExp)) %>%
ggplot(aes(x=year, y=mean_life_expectancey,group=continent,color=continent))+
geom_line()+
geom_point()
gapminder %>%
ggplot(aes(x=gdpPercap,y=lifeExp))+
geom_line()
gapminder %>%
ggplot(aes(x=gdpPercap,y=lifeExp))+
geom_jitter() +
geom_smooth()
gapminder %>%
groupby_(country,year)%>%
x=filter(year=2007) %>%
y=filter(year=1952)
gapminder %>%
groupby_(country,year)%>%
x = filter(year==2007) %>%
y = filter(year==1952)
gapminder %>%
groupby_(country,year)%>%
x = filter(year == "2007") %>%
y = filter(year=="1952")
gapminder %>%
groupby_(country)%>%
x = filter(year == "2007") %>%
y = filter(year=="1952")
gapminder %>%
groupby_(country)%>%
x = filter(year == 2007) %>%
gapminder %>%
groupby_(country)%>%
filter(year == 2007) %>%
gapminder %>%
groupby_(country)%>%
filter(year == 2007)
gapminder %>%
group_by(country)%>%
filter(year == 2007)
gapminder %>%
group_by(country)%>%
x=filter(year == 2007)
gapminder %>%
group_by(country)%>%
x <- filter(year == 2007)
x <- gapminder %>%
group_by(country)%>%
filter(year == 2007)
gapminder %>%
group_by(country)%>%
summarise(popgrowth = pop(year==2007))
gapminder %>%
group_by(country)%>%
summarise(popgrowth = max(pop) - min(pop))
gapminder %>%
group_by(country)%>%
summarise(popgrowth = max(pop) - min(pop)) %>%
arrange(popgrowth)
gapminder %>%
group_by(country)%>%
summarise(popgrowth = max(pop) - min(pop)) %>%
top(5)
gapminder %>%
group_by(country)%>%
summarise(popgrowth = max(pop) - min(pop)) %>%
top_n(5)
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop)) %>%
top_n(5) %>%
ggplot(aes(x=country,y=popgrowth))+
geom_bar()
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop)) %>%
top_n(5) %>%
ggplot(aes(x=country,y=popgrowth))+
geom_col()
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop), gdpgrowth = max(gdpPercap) - min(gdpPercap)) %>%
top_n(5) %>%
ggplot(aes(x=gdpgrowth,y=popgrowth))+
geom_col()
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop), gdpgrowth = max(gdpPercap) - min(gdpPercap)) %>%
top_n(5) %>%
ggplot(aes(x=gdpgrowth,y=popgrowth))+
geom_line()
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop), gdpgrowth = max(gdpPercap) - min(gdpPercap)) %>%
top_n(5) %>%
ggplot(aes(x=gdpgrowth,y=popgrowth,color = country))+
geom_line()
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop), gdpgrowth = max(gdpPercap) - min(gdpPercap)) %>%
top_n(5) %>%
ggplot(aes(x=gdpgrowth,y=popgrowth))+
geom_line()+
geom_points(aes(color=country))
gapminder %>%
group_by(country) %>%
summarise(popgrowth = max(pop) - min(pop), gdpgrowth = max(gdpPercap) - min(gdpPercap)) %>%
top_n(5) %>%
ggplot(aes(x=gdpgrowth,y=popgrowth))+
geom_line()+
geom_point(aes(color=country))
gapminder %>%
group_by(country)%>%
summarise(popgrowth = max(pop) - min(pop)) %>%
arrange(-popgrowth)
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=year,y=pop,color=country))+
geom_line()
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop,color = country))+
geom_line()+
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop,color = country))+
geom_line()
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop,color = country))+
scale_y_log10()
geom_line()
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop,color = country))+
scale_y_log10()+
geom_line()
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop,color = country))+
scale_y_log10()+
scale_x_log10()+
geom_line()
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop))+
scale_y_log10()+
facet_wrap(country~)
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop))+
scale_y_log10()+
facet_wrap(country~)+
gapminder %>%
filter(country %in% c("China", "India", "United States", "Indonesia", "Brazil")) %>%
ggplot(aes(x=gdpPercap,y=pop))+
scale_y_log10()+
facet_wrap(country~.)+
scale_x_log10()+
geom_line()
gapminder %>%
group_by(continent)
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_x_log10()+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_x_log10()+
geom_line()+
geom_point()
gapminder %>%
group_by(continent) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_line()+
geom_point()
gapminder %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_line()+
geom_point()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_jitter()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
geom_line()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop,color=country))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop,color="aliceblue"))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop,colour="aliceblue"))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")+
theme_economist()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")+
theme_classic()
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population")+
theme_classic()+
scale_fill_brewer(palette = "Paired")
gapminder %>%
filter(year==2007) %>%
ggplot(aes(x=lifeExp,y=pop))+
facet_wrap(continent~.)+
scale_y_log10()+
geom_point()+
labs(title = "Life Expectency & Population",
x="Life Expectency(year)",
y="Population log 10")+
theme_classic()+
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
UC_admit <- read_csv("data/UC_admit.csv")
str(UC_admit)
miss_var_summary(UC_admit)
table(UC_admit$Campus)
table(UC_admit$Category)
table(UC_admit$Ethnicity)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Options", width = 3,
selectInput("x", "Select Category", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
sliderInput("year", "Select Year", min = 2010, max = 2019, value = 2010, step = 1),
),
box(title = "Ethnicity Distribution", width = 9,
plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity != "All") %>%
filter(Category == input$x) %>%
filter(Campus == input$y) %>%
filter(Academic_Yr == input$year) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Options", width = 3,
selectInput("x", "Select Category", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
sliderInput("year", "Select Year", min = 2010, max = 2019, value = 2010, step = 1),
),
box(title = "Ethnicity Distribution", width = 9,
plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity != "All") %>%
filter(Category == input$x) %>%
filter(Campus == input$y) %>%
filter(Academic_Yr == input$year) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col()
})
}
shinyApp(ui, server)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(shinydashboard)
library(naniar)
UC_admit <- read_csv("data/UC_admit.csv")
str(UC_admit)
miss_var_summary(UC_admit)
table(UC_admit$Campus)
table(UC_admit$Category)
table(UC_admit$Ethnicity)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Options", width = 3,
selectInput("x", "Select Category", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
sliderInput("year", "Select Year", min = 2010, max = 2019, value = 2010, step = 1),
),
box(title = "Ethnicity Distribution", width = 9,
plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity != "All") %>%
filter(Category == input$x) %>%
filter(Campus == input$y) %>%
filter(Academic_Yr == input$year) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Options", width = 3,
selectInput("x", "Select Category", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Ethnicity", choices = c("International", "African American", "All", "American Indian", "Asian", "Chicano/Latino", "Unknown", "White"),
selected = "African American")
),
box(title = "Overall Enrollment", width = 9,
plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session){
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Category == input$x) %>%
filter(Campus == input$y) %>%
filter(Ethnicity == input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR))+
geom_point()
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable=T),
dashboardBody(
fluidRow(
box(title = "Options", width = 3,
selectInput("x", "Select Category", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits"),
selectInput("y", "Select Campus", choices = c("Davis", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
sliderInput("year", "Select Year", min = 2010, max = 2019, value = 2010, step = 1),
),
box(title = "Ethnicity Distribution", width = 9,
plotOutput("plot", width = "800px", height = "600px")
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot <- renderPlot({
UC_admit %>%
filter(Ethnicity != "All") %>%
filter(Category == input$x) %>%
filter(Campus == input$y) %>%
filter(Academic_Yr == input$year) %>%
ggplot(aes(x=Ethnicity, y=FilteredCountFR)) +
geom_col()
})
}
shinyApp(ui, server)
runApp('App1.R')
runApp('App1.R')
runApp('App2.R')
